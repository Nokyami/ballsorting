{% extends 'layout.twig' %}

{% block body %}
  <div class="row mt-2">
    <div class="col-12">
      <h1 class="display-1">Acquisition</h1>
    </div>
  </div>
  <div class="row mt-2">
    <div class="col-8">

      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Live data</h4>
          <p class="card-text">Last acquired data at <span id="timestamp" >...waiting...</span>.</p>
          <h4 id="measure" class="display-3">nA</h4>

        </div>
      </div>

    </div>
    <div class="col-4">
      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Control</h4>
          <p class="card-text">Use these controls to start or stop a record</p>
          <button type="button" name="" id="start" class="btn btn-success btn-lg btn-block" style="display: block">Start</button>
          <button type="button" name="" id="stop" class="btn btn-warning btn-lg btn-block" style="display: none">Stop</button>
          <button type="button" name="" id="reset" class="btn btn-danger btn-lg btn-block" style="display: block">Reset</button>
          <p class="card-text">Current state : <span id="state">nA</span> </p>
        </div>
      </div>
    </div>
  </div>

  <div class="row d-print-none">
    <div class="col-12">
    <div class="card shadow">
        <div class="card-body">
            <canvas id="graph" ></canvas>
        </div>
    </div>
    </div>
  </div>
{% endblock %}


{% block scripts %}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script type="text/javascript">
    /*Variables*/
    let i = null;
    let bargraph = null;
    let myData = [0,0,0];
    const labels = ["Yellow","Pink","Other"];
  
    /*refresh*/
    $(() => {
      setInterval(() => {

        $.ajax({
          type: "post",
          url: "/api/state",
          dataType: "json",
          success: function (response) {

            myData[0] = response.cptY;
            myData[1] = response.cptP;
            myData[2] = response.cptO;

            console.log(response);
            $('#timestamp').text(response.lastTimestamp);
            if(response.lastAcquisition !== null)
            {
              $('#measure').text(response.lastAcquisition);
            }
            else
            {
              $('#measure').text("Empty");
            }
            $('#state').text((response.idle ? "IDLE" : "recording..."));
            if(response.idle){
              $("#start").show();
              $("#stop").hide();
            } 
            else {
              $("#stop").show();
              $("#start").hide();
            }

            //BAR GRAPH
            chart();
            
          }
        });
      }, 1000);
    });

    function chart(){
      const data = {
        labels: labels,
        datasets: [{
          label: 'Live meter',
          data: myData,
          backgroundColor: [
            'rgba(255, 205, 86, 0.2)',
            'rgba(255, 192, 203, 0.2)',
            'rgba(201, 203, 207, 0.2)'
          ],
          borderColor: [
            'rgb(255, 205, 86)',
            'rgb(255, 190, 203)',
            'rgb(201, 203, 207)'
          ],
          borderWidth: 1
        }]
      };

      if(bargraph === null){
        const graph = $("#graph")
        bargraph = new Chart(graph, {
        type: 'bar',
        data: data,
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
        });
      } else {
        bargraph.data.datasets[0].data = myData;
        bargraph.update();
      }
    }


  $("#start").click(function (e) { 
    e.preventDefault();
    $.post("/api/start",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  $("#stop").click(function (e) { 
    e.preventDefault();
    $.post("/api/stop",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  $("#reset").click(function (e) {
    e.preventDefault();
    $.post("/api/reset",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  
  </script>

{% endblock %}